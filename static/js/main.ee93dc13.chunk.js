(this["webpackJsonpreact-threejs-music-visualizer"]=this["webpackJsonpreact-threejs-music-visualizer"]||[]).push([[0],{23:function(e){e.exports=JSON.parse('[{"title":"Cinematic Dramatic","artist":"AleXZavesa","img":{"src":"/assets/mountain1.jpg"},"songUrl":"/music/cinematic1.mp3"},{"title":"Cinematic Melody (Main)","artist":"ZakharValaha","img":{"src":"/assets/mountain2.jpg"},"songUrl":"/music/cinematic2.mp3"},{"title":"Rhythm of War (Main)","artist":"ZakharValaha","img":{"src":"/assets/war.jpg"},"songUrl":"/music/cinematic3.mp3"}]')},49:function(e,n,t){},54:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(37),c=t.n(o),i=(t(49),t(13)),s=t(5),l=t(14),u=t(57),f=t(56),g=Object(f.a)({u_time:0,u_mouse:new s.Vector2(0,0),u_resolution:new s.Vector2(0,0),u_freq:0},'\n  varying vec2 vUv;\n  varying float vMousePos;\n  varying float vDistort;\n  uniform float u_time;\n  uniform vec2 u_mouse;\n  uniform float u_freq;\n  float PI = 3.14159265359;\n\n  // uniform vec2 u_hover; \n\n  // GLSL textureless classic 3D noise "cnoise",\n  // with an RSL-style periodic variant "pnoise".\n  // Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n  // Version: 2011-10-11\n  //\n  // Many thanks to Ian McEwan of Ashima Arts for the\n  // ideas for permutation and gradient selection.\n  //\n  // Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n  // Distributed under the MIT license. See LICENSE file.\n  // https://github.com/ashima/webgl-noise\n  //\n\n  vec3 mod289(vec3 x)\n  {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n  }\n\n  vec4 mod289(vec4 x)\n  {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n  }\n\n  vec4 permute(vec4 x)\n  {\n    return mod289(((x*34.0)+1.0)*x);\n  }\n\n  vec4 taylorInvSqrt(vec4 r)\n  {\n    return 1.79284291400159 - 0.85373472095314 * r;\n  }\n\n  vec3 fade(vec3 t) {\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n  }\n\n  // Classic Perlin noise, periodic variant\n  float pnoise(vec3 P, vec3 rep)\n  {\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n    Pi0 = mod289(Pi0);\n    Pi1 = mod289(Pi1);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n    return 2.2 * n_xyz;\n  }\n\n  mat3 rotation3dY(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat3(\n      c, 0.0, -s,\n      0.0, 1.0, 0.0,\n      s, 0.0, c\n    );\n  }\n\n  vec3 rotateY(vec3 v, float angle) {\n    return rotation3dY(angle) * v;\n  }  \n\n  void main() {\n    vUv = uv;\n\n    float mousePos = 1.0 - ( 2.0 * max(abs(u_mouse.x), abs(u_mouse.y)) );\n    vMousePos = mousePos;\n\n    float scale = clamp(1.0 - abs(abs(u_mouse.x) + abs(u_mouse.y)), 1.0, 1.05);\n\n    float audioFreq = u_freq;\n    float speed = 0.02;\n    float t = u_time * speed + clamp(audioFreq / 100., 0.0, 0.2);\n    float frequency = 2.9;\n    float amplitude = 2.;\n    float noiseScale = 1.0;\n    float noiseDensity = 7.2 - sin(2.0*PI*(audioFreq / 15. / u_time) * 0.01);\n    float noiseStrength = 8. * mix(1.0, 2.0, u_freq / 100.);\n\n    vec3 repetitions = vec3(2.0);\n\n    // if playing\n    if(audioFreq > 0.0){\n      speed += 0.2;\n      noiseScale -= 0.1;\n      amplitude += 1.0;\n      frequency += 0.3;\n    }\n\n  \n    float distortion = pnoise((normal * noiseScale + t) * noiseDensity, repetitions) * noiseStrength;\n    vDistort = distortion;\n\n    vec3 pos = position + (normal * distortion);\n    float angle = sin(uv.y * frequency + t) * amplitude;\n    pos = rotateY(pos, angle);    \n\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos * ((clamp(scale * mix(1.0, 1.13, u_freq / 100.), 1.0, 1.8)) + mousePos * 0.02), 1.);\n  }\n  ',"\n  varying float vDistort;\n  varying vec2 vUv;\n  varying float vMousePos;\n  uniform float u_time;\n  uniform vec2 u_resolution;\n  uniform vec2 u_mouse;\n  uniform float u_freq;\n  // uniform vec2 u_hover; \n  float PI = 3.14159265359;\n\n  vec3 cosPalette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n      return a + b * cos(6.28318 * (c * t + d));\n  } \n    \n  float quarticInOut(float t) {\n    return t < 0.5\n      ? +8.0 * pow(t, 4.0)\n      : -8.0 * pow(t - 1.0, 4.0) + 1.0;\n  }\n\n  float map(float value, float min1, float max1, float min2, float max2) {\n    return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n  }\n\n  void main()\t{\n    float intensity = 6.0;\n    float distort = vDistort * intensity + mix(0.0, 0.13, u_freq / 100.);\n\n    vec2 position = gl_FragCoord.xy / u_resolution.xy;\n\n    vec3 brightness = vec3(0.7, 0.7, 0.7);\n    vec3 contrast = vec3(0.5);\n    vec3 oscilation = vec3(0.008);\n    vec3 phase = vec3(0.2);\n    float mouse = map(vMousePos * 5.0, -3.0, 1.0, 0.0, 1.0 );\n\n    float randGlow = (sin(2. * PI + u_time / 1.8) + 10.0) * 0.02;\n\n    float glow = quarticInOut(clamp(mouse, 0.1, 0.2) + randGlow) + mix(0.0, 0.13, u_freq / 100.);\n\n    vec3 color = cosPalette(distort, brightness, contrast, oscilation, phase) * glow;\n\n    gl_FragColor = vec4(color, 1.0);\n  }\n  ");Object(l.b)({GlowingNoiseShaderMaterial:g});var v=t(42),m=t(41),d=t(25),x=t(43),y=t(36),j=t(44),b=t(9),p=t(12),h=t(23),O=t(10),z=r.a.createContext({tracklist:h,currentTrack:h[0],playing:!1,setPlaying:function(){},setCurrentTrack:function(){}}),P=function(e){var n=e.url,t=void 0!==n&&n,r=e.fftSize,o=void 0===r?2048:r,c=e.smoothingTimeConstant,i=void 0===c?.75:c,s=e.loop,l=void 0!==s&&s,u=e.volume,f=void 0===u?1:u,g=Object(a.useContext)(z),v=g.playing,m=g.setPlaying,d=g.currentTrack,x=Object(a.useState)(t||d.songUrl),y=Object(p.a)(x,2),j=y[0],b=y[1],h=Object(a.useState)(),O=Object(p.a)(h,2),P=O[0],w=O[1],_=Object(a.useState)(null),S=Object(p.a)(_,2),k=S[0],C=S[1],q=Object(a.useState)(null),N=Object(p.a)(q,2),M=N[0],A=N[1],F=Object(a.useState)(null),I=Object(p.a)(F,2),U=I[0],D=I[1],E=Object(a.useCallback)((function(){var e=new Audio("/react-threejs-music-visualizer"+j),n=new AudioContext,t=n.createMediaElementSource(e),a=n.createAnalyser();return a.fftSize=o,a.smoothingTimeConstant=i,e.loop=l,e.volume=f,t.connect(n.destination),t.connect(a),w(e),C(n),D(a),{audioFile:e,_analyser:a}}),[j]);Object(a.useEffect)((function(){m(!1),b((function(){return d.songUrl}))}),[d]);Object(a.useEffect)((function(){return function(){return null===k||void 0===k?void 0:k.close()}}),[]);var T=function(){m(!v)};return Object(a.useEffect)((function(){if(v){var e=E(),n=e.audioFile,t=e._analyser;n.play(),A(function(e){var n=e.frequencyBinCount,t=new Uint8Array(n);return e.getByteFrequencyData(t),t}(t))}else null===P||void 0===P||P.pause()}),[v]),Object(a.useEffect)((function(){if(P)return P.addEventListener("ended",T),function(){null===k||void 0===k||k.close(),P.removeEventListener("ended",T)}}),[P]),{playing:v,setUrl:b,data:M,analyser:U,toggle:T}};var w=function(e){var n=e.children,t=P({url:h[0].songUrl}).setUrl,o=function(e){return u(Object(b.a)(Object(b.a)({},l),{},{playing:e}))},c=function(e){u(Object(b.a)(Object(b.a)({},l),{},{currentTrack:e})),t(e.songUrl)},i=Object(a.useState)({tracklist:h,currentTrack:h[0],playing:!1}),s=Object(p.a)(i,2),l=s[0],u=s[1],f=r.a.useMemo((function(){return Object(b.a)(Object(b.a)({},l),{},{setPlaying:o,setCurrentTrack:c})}),[l]);return Object(O.jsx)(z.Provider,{value:f,children:n})};function _(e){var n=e.audioData,t=e.analyser,r=e.playing,o=Object(a.useRef)(),c=Object(l.d)().size,u=Object(i.a)(Array(100).keys());return Object(l.c)((function(e,a){var i=e.clock.elapsedTime;if(o.current.material.uniforms.u_time.value=i,o.current.material.uniforms.u_mouse.value=new s.Vector2(e.mouse.x+a,e.mouse.y+a),o.current.material.uniforms.u_resolution.value=new s.Vector2(c.width,c.height),o.current.rotation.y=i/20,o.current.rotation.z=i/45,r&&n){t.getByteFrequencyData(n),o.current.rotation.x=i/10,o.current.rotation.y=i/5,o.current.rotation.z=i/15;for(var l=0;l<u.length;l++){var f=u[l],g=n[f];o.current.material.uniforms.u_freq.value=g}}})),Object(O.jsx)(O.Fragment,{children:Object(O.jsxs)("mesh",{ref:o,children:[Object(O.jsx)("sphereBufferGeometry",{attach:"geometry",args:[100,200,200]}),Object(O.jsx)("glowingNoiseShaderMaterial",{attach:"material",color:"#203050"})]})})}function S(e){var n=e.bloomOptions,t=void 0===n?[2,1,1.5,0]:n,r=e.grainOptions,o=void 0===r?[1,0,0,0]:r,c=Object(a.useRef)(),i=Object(l.d)(),s=i.scene,u=i.gl,f=i.size,g=i.camera;return Object(a.useEffect)((function(){c.current.setSize(f.width,f.height)}),[f]),Object(l.c)((function(){return c.current.render()}),1),Object(O.jsxs)("effectComposer",{ref:c,args:[u],children:[Object(O.jsx)("renderPass",{attachArray:"passes",scene:s,camera:g}),Object(O.jsx)("shaderPass",{attachArray:"passes",args:[y.a],"material-uniforms-resolution-value":[1/f.width,1/f.height]}),Object(O.jsx)("filmPass",{attachArray:"passes",args:o}),Object(O.jsx)("unrealBloomPass",{attachArray:"passes",args:t})]})}Object(l.b)({UnrealBloomPass:x.a,FilmPass:j.a,FXAAShader:y.a,RenderPass:m.a,ShaderPass:d.a,EffectComposer:v.a});var k=function(){var e=P({url:!1}),n=e.playing,t=e.analyser,a=e.data;return Object(O.jsx)(O.Fragment,{children:Object(O.jsx)("div",{className:"webgl-canvas",children:Object(O.jsxs)(l.a,{dpr:window.devicePixelRatio,colorManagement:!0,camera:{position:[0,230,0]},onCreated:function(e){e.gl.setClearColor("#000000")},children:[Object(O.jsx)("ambientLight",{intensity:1}),Object(O.jsx)(_,{audioData:a,playing:n,analyser:t}),Object(O.jsx)(u.a,{enableZoom:!1,enablePan:!1}),Object(O.jsx)(S,{bloomOptions:[2,1,1.5,0]})]})})})},C=t(27);var q=function(){var e=Object(a.useContext)(z),n=e.currentTrack,t=e.tracklist,r=e.setCurrentTrack,o=e.playing,c=e.setPlaying;return console.log(n),Object(O.jsxs)("div",{className:"fixed bottom-0 left-0 w-full py-6 px-8 z-50 bg-black text-gray-100 border-t-2 border-dark-gray flex justify-between items-center",children:[Object(O.jsxs)("div",{className:"flex justify-between items-center",children:[Object(O.jsxs)("figure",{className:"h-12 w-12 relative",children:[Object(O.jsx)("img",{className:"object-cover absolute",src:"/react-threejs-music-visualizer"+n.img.src,alt:"".concat(n.title)}),Object(O.jsx)("figcaption",{className:"sr-only",children:"Cover of ".concat(n.title," by ").concat(n.artist)})]}),Object(O.jsxs)("div",{className:"pl-5",children:[Object(O.jsx)("p",{className:"text-white font-bold tracking-wide lg:text-lg text-base",children:n.title}),Object(O.jsx)("p",{className:"text-white font-light tracking-wide lg:text-sm text-xs mt-1",children:n.artist})]})]}),Object(O.jsxs)("div",{className:"flex justify-between items-center w-38",children:[Object(O.jsx)("button",{title:"previous song",className:"cursor-pointer flex justify-center items-center h-10 w-10 rounded-full bg-black",onClick:function(){return function(){c(!1);var e=t.indexOf(n),a=e-1>=0?e-1:t.length-1;r(t[a])}()},children:Object(O.jsx)(C.a,{className:"h-3/5 w-3/5 text-white transform rotate-180"})}),Object(O.jsx)("button",{title:"play song",className:"cursor-pointer group flex justify-center items-center h-10 w-10 rounded-full bg-black",onClick:function(){c(!o)},children:o?Object(O.jsx)(C.b,{className:"group-hover:scale-105 transform scale-100 transition duration-150 ease-out h-full w-full text-white"}):Object(O.jsx)(C.c,{className:"group-hover:scale-105 transform scale-100 transition duration-150 ease-out h-full w-full text-white"})}),Object(O.jsx)("button",{title:"next song",className:"cursor-pointer flex justify-center items-center h-10 w-10 rounded-full bg-black",onClick:function(){return function(){c(!1);var e=t.indexOf(n),a=e+1<=t.length-1?e+1:0;r(t[a])}()},children:Object(O.jsx)(C.a,{className:"h-3/5 w-3/5 text-white"})})]})]})};var N=function(){return Object(O.jsx)("div",{className:"App",children:Object(O.jsxs)(w,{children:[Object(O.jsx)(q,{}),Object(O.jsx)(k,{})]})})};c.a.render(Object(O.jsx)(r.a.StrictMode,{children:Object(O.jsx)(N,{})}),document.getElementById("root"))}},[[54,1,2]]]);
//# sourceMappingURL=main.ee93dc13.chunk.js.map